#YEAR BY YEAR ANALYSIS

options(java.parameters = "-Xmx50g")
#options(java.parameters = "-Xmx5g")
library(rJava)
library(bartMachine)
library(haven)
library(plyr)
library(dplyr)
library(PRROC)
library(caret)

#Upload dati
setwd("/home/falco.bargaglistoffi/Research/Zombie Hunting/Data/")
dati <- read_dta("data_2017.dta")
dati$iso <- as.factor(dati$iso)
dati$nace_2 <- as.factor(dati$nace_2)
dati$control <- as.factor(dati$control)

set.seed(123)
train_sample <- sample(seq_len(nrow(dati)), size = nrow(dati)*0.9) 
train <- dati[train_sample,]
test <- dati[-train_sample,]

train_it <-  train[train$iso== 'IT', ]
train_pt <-  train[train$iso== 'PT', ]
train_fr <-  train[train$iso== 'FR', ]
train_es <-  train[train$iso== 'ES', ]

test_it <-  test[test$iso== 'IT', ]
test_pt <-  test[test$iso== 'PT', ]
test_fr <-  test[test$iso== 'FR', ]
test_es <-  test[test$iso== 'ES', ]

predictors <- c("iso", "tfp_acf_2016", "dummy_patents", "dummy_trademark", "consdummy", "control", 
                "nace_2", "fin_rev_2016", "int_paid_2016", "ebitda_2016", "cash_flow_2016", "depr2016", 
                "revenue2016", "total_assets_2016",  "long_term_debt_2016", "employees_2016", "added_value_2016",
                "materials_2016", "wage_bill_2016", "loans_2016" , "int_fixed_assets_2016", "fixed_assets_2016",
                "current_liabilities_2016",  "liquidity_ratio_2016",  "solvency_ratio_2016", "current_assets_2016",
                "fin_expenses_2016", "net_income_2016",  "fin_cons100_2016" , "inv_2016" , "real_SA_2016", 
                "shareholders_funds_2016" , "NEG_VA_2016" , "ICR_failure_2016" , "profitability_2016" ,  "misallocated_2016_fixed" , 
                "interest_diff_2016")
train$X <-as.data.frame(train[predictors])

set_bart_machine_num_cores(4)
system.time({
  bart_machine<-bartMachine(train$X,as.factor(train$failure), use_missing_data=TRUE) 
})

test$X <- as.data.frame(test[predictors])
fitted.results.bart <- 1- round(predict(bart_machine, test$X,  type='prob'), 6)

postResample(fitted.results.bart, test$failure)
#     RMSE  Rsquared       MAE 
#0.2533690 0.4123998 0.1277762 
bart_predict_for_test_data(bart_machine, test$X, as.factor(test$failure))$rmse

#Get Accurancy
fitted.bart <- ifelse(fitted.results.bart> 0.5 ,1,0)
misClasificError.bart <- mean(fitted.bart != test$failure)
acc.bart<-print(paste('Accuracy',1-misClasificError.bart)) #Accurancy:0.892777555568253
auc(fitted.results.bart, test$failure)

#Roc
fg.bart<-fitted.results.bart[test$failure==1] 
bg.bart<-fitted.results.bart[test$failure==0]


roc.bart<-roc.curve(scores.class0 = fg.bart, scores.class1 = bg.bart, curve = T)
plot(roc.bart) #0.9039

pr.bart<-pr.curve(scores.class0 = fg.bart, scores.class1 = bg.bart, curve = T)
plot(pr.bart) #0.6867

#Confusion matrix
fitted.values.bart <- predict(bart_machine, test$X,  type='class')

table(fitted.values.bart, test$failure)